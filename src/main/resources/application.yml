# ==================================================
# Default Configuration
# ==================================================
spring:
  application:
    name: rr-store
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres-db:5432/dev_database
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:your_secure_password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

server:
  port: 8080
  address: 0.0.0.0

# ==================================================
# Development Profile
# ==================================================
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://postgres-db:5432/dev_database
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:your_password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  server:
    port: 8080  # Ensure management endpoints run on the same port as the app

logging:
  level:
    root: DEBUG
    '[org.springframework.boot.actuate.endpoint.web]': DEBUG
    '[io.micrometer]': DEBUG
    '[com.rr.store]': INFO

# ==================================================
# Production Profile
# ==================================================
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres-db}:${DB_PORT:5432}/${DB_NAME:prod_database}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:your_secure_password}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  server:
    port: 8080

logging:
  level:
    root: WARN
    "[com.rr.store]": INFO

# ==================================================
# Test Profile
# ==================================================
---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: test
    password: test
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  server:
    port: 8080

logging:
  level:
    root: DEBUG
    '[org.springframework.boot.actuate.endpoint.web]': DEBUG
    '[io.micrometer]': DEBUG
